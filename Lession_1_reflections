How did viewing a diff between two versions of a file help you see the bug that
was introduced?

    Compare methode.

How could having easy access to the entire history of a file make you a more
efficient programmer in the long term?

    I could analysed sufficent steps in process of making file.

What do you think are the pros and cons of manually choosing when to create a
commit, like you do in Git, vs having versions automatically saved, like Google
docs does?

    Pros: Not saving wrong answer , avoiding confusion ,can work offline , having freedom of chooice
    Cons : If there is blackout , or you forgot to save work you lose data ,
     getting  saving stuff off your mind, desicion making of commits beeing too big/small

Why do you think some version control systems, like Git, allow saving multiple
files in one commit, while others, like Google Docs, treat each file separately?

    Because its practical. Maybe you make several version of kinda same file , and you dont 
           which you will be using ,etc. 

How can you use the commands git log and git diff to view the history of files?

    Log showing info about commites, seeing change messages , and use ID's  with diff to compare perviuse and current version of files (etc. history of files)

How might using version control make you more confident to make changes that
could break something?

    You easier spot weak spots , or uneficient code . Removes fear of messing up working code ,for examing new options. 

Now that you have your workspace set up, what do you want to try using Git for?

   Learning and freelence work, version control , make my life easier with more complex code 

